name: MCP 監控系統 CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-psutil
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Run tests
      run: |
        # 測試 MCP 伺服器模組是否可以正常導入
        python -c "import mcp_servers.mcp_system_monitor; print('✅ mcp_system_monitor 可以正常導入')"
        python -c "import mcp_servers.mcp_process_monitor; print('✅ mcp_process_monitor 可以正常導入')"
        python -c "import mcp_servers.mcp_network_monitor; print('✅ mcp_network_monitor 可以正常導入')"
        python -c "import mcp_servers.mcp_history_manager; print('✅ mcp_history_manager 可以正常導入')"
        python -c "import mcp_servers.mcp_service_controller; print('✅ mcp_service_controller 可以正常導入')"
        python -c "import mcp_servers.mcp_log_monitor; print('✅ mcp_log_monitor 可以正常導入')"
        
        # 測試 Web 儀表板
        python -c "print('✅ Web 儀表板檔案檢查完成')"
    
    - name: Check code quality
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
    
    - name: Run security checks
      run: |
        bandit -r . -f json -o bandit-report.json || true
        safety check || true
    
    - name: Upload security results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-results
        path: bandit-report.json
